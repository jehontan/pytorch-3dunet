device: cuda:0
model:
  name: UNet3D
  # number of input channels to the model
  in_channels: 60
  # number of output channels
  out_channels: 60
  # determines the order of operators in a single layer (crg - Conv3d+ReLU+GroupNorm)
  layer_order: crg
  # initial number of feature maps
  f_maps: 120
  # number of groups in the groupnorm
  num_groups: 6
  # apply element-wise nn.Sigmoid after the final 1x1x1 convolution, otherwise apply nn.Softmax
  final_sigmoid: false
# loss function to be used during training
loss:
  name: BCEDiceLoss
  # a target value that is ignored and does not contribute to the input gradient
  ignore_index: null
  # skip the last channel in the target (i.e. when last channel contains data not relevant for the loss)
  skip_last_target: false
optimizer:
  # initial learning rate
  learning_rate: 0.0002
  # weight decay
  weight_decay: 0.00001
# evaluation metric
eval_metric:
  # use AdaptedRandError metric
  name: BoundaryAdaptedRandError
  # probability maps threshold
  threshold: 0.4
  # use the last target channel to compute the metric
  use_last_target: true
  # use only the first channel for computing the metric
  use_first_input: true
lr_scheduler:
  name: ReduceLROnPlateau
  # make sure to use the 'min' mode cause lower AdaptedRandError is better
  mode: min
  factor: 0.5
  patience: 30
trainer:
  # model with lower eval score is considered better
  eval_score_higher_is_better: False
  # path to the checkpoint directory
  checkpoint_dir: "/home/jehon/Development/pytorch-3dunet/checkpoints"
  # path to latest checkpoint; if provided the training will be resumed from that checkpoint
  resume: null
  # path to the best_checkpoint.pytorch; to be used for fine-tuning the model with additional ground truth
  pre_trained: null
  # how many iterations between validations
  validate_after_iters: 1000
  # how many iterations between tensorboard logging
  log_after_iters: 500
  # max number of epochs
  max_num_epochs: 1000
  # max number of iterations
  max_num_iterations: 150000
# Configure training and validation loaders
loaders:
  # how many subprocesses to use for data loading
  num_workers: 8

  dataset: SemanticMapDataset

  # configuration of the train loader
  train:
    # path to the training datasets
    file_paths:
      - "/home/jehon/Downloads/film_data/train"

  # configuration of the val loader
  val:
    # path to the val datasets
    file_paths:
      - "/home/jehon/Downloads/film_data/val"